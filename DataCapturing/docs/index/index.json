{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/accelerationpointremovalcleaner\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/accelerationpointremovalcleaner\/clean(measurement:from:)","title":"func clean(measurement: Int64, from: PersistenceLayer) throws","type":"method"}],"path":"\/documentation\/datacapturing\/accelerationpointremovalcleaner","title":"AccelerationPointRemovalCleaner","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamanager\/init(storetype:migrator:)","title":"init(storeType: String, migrator: CoreDataMigratorProtocol) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamanager\/setup(bundle:completionclosure:)","title":"func setup(bundle: Bundle, completionClosure: (Error?) -> Void) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamanager\/load(model:)","title":"static func load(model: String) throws -> NSManagedObjectModel","type":"method"}],"path":"\/documentation\/datacapturing\/coredatamanager","title":"CoreDataManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamigrator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamigrator\/migratestore(at:toversion:inbundle:)","title":"func migrateStore(at: URL, toVersion: CoreDataMigrationVersion, inBundle: Bundle)","type":"method"},{"path":"\/documentation\/datacapturing\/coredatamigrator\/requiresmigration(at:toversion:inbundle:)","title":"func requiresMigration(at: URL, toVersion: CoreDataMigrationVersion, inBundle: Bundle) -> Bool","type":"method"}],"path":"\/documentation\/datacapturing\/coredatamigrator","title":"CoreDataMigrator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfaceauthenticator\/init(authenticationendpoint:session:)","title":"init(authenticationEndpoint: URL, session: Session)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfaceauthenticator\/authenticationendpoint","title":"var authenticationEndpoint: URL","type":"property"},{"path":"\/documentation\/datacapturing\/cyfaceauthenticator\/password","title":"var password: String?","type":"property"},{"path":"\/documentation\/datacapturing\/cyfaceauthenticator\/username","title":"var username: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfaceauthenticator\/authenticate(onsuccess:onfailure:)","title":"func authenticate(onSuccess: (String) -> Void, onFailure: (Error) -> Void)","type":"method"}],"path":"\/documentation\/datacapturing\/cyfaceauthenticator","title":"CyfaceAuthenticator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/init(apiurl:coredatastack:cleaner:sessionregistry:authenticator:)","title":"init(apiURL: URL, coreDataStack: CoreDataManager, cleaner: Cleaner, sessionRegistry: SessionRegistry, authenticator: Authenticator)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/authenticator","title":"let authenticator: Authenticator","type":"property"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/handler","title":"var handler: [(DataCapturingEvent, Status) -> Void]","type":"property"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synconwifionly","title":"var syncOnWiFiOnly: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/activate()","title":"func activate() throws","type":"method"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/deactivate()","title":"func deactivate()","type":"method"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/sync()","title":"func sync()","type":"method"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/syncchecked()","title":"func syncChecked()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror\/missinghost","title":"case missingHost","type":"case"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror\/reachabilitystartfailed","title":"case reachabilityStartFailed","type":"case"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror\/unabletobuildreachabilitymanager","title":"case unableToBuildReachabilityManager","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/cyfacesynchronizer\/synchronizererror","title":"CyfaceSynchronizer.SynchronizerError","type":"enum"}],"path":"\/documentation\/datacapturing\/cyfacesynchronizer","title":"CyfaceSynchronizer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/init(sensormanager:accelerometerinterval:gyrointerval:directionsinterval:savinginterval:datamanager:)","title":"init(sensorManager: CMMotionManager, accelerometerInterval: Double, gyroInterval: Double, directionsInterval: Double, savingInterval: TimeInterval, dataManager: CoreDataManager)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/coredatastack","title":"let coreDataStack: CoreDataManager","type":"property"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/currentmeasurement","title":"var currentMeasurement: Int64?","type":"property"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/handler","title":"var handler: [((DataCapturingEvent, Status) -> Void)]","type":"property"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/ispaused","title":"var isPaused: Bool","type":"property"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/isrunning","title":"var isRunning: Bool","type":"property"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/locationupdateskiprate","title":"var locationUpdateSkipRate: UInt","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/changemodality(to:)","title":"func changeModality(to: String)","type":"method"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/pause()","title":"func pause() throws","type":"method"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/resume()","title":"func resume() throws","type":"method"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/setup()","title":"func setup()","type":"method"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/start(inmode:)","title":"func start(inMode: String) throws","type":"method"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/stop()","title":"func stop() throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/converttoutctimestamp(date:)","title":"static func convertToUtcTimestamp(date: Date) -> UInt64","type":"method"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/currenttimeinmillissince1970()","title":"static func currentTimeInMillisSince1970() -> UInt64","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/datacapturing\/datacapturingservice\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"}],"path":"\/documentation\/datacapturing\/datacapturingservice\/cllocationmanagerdelegate-implementations","title":"CLLocationManagerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/datacapturingservice","title":"DataCapturingService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/defaultdistancecalculationstrategy\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/defaultdistancecalculationstrategy\/calculatedistance(from:to:)-4g3on","title":"func calculateDistance(from: GeoLocationMO, to: GeoLocationMO) -> Double","type":"method"},{"path":"\/documentation\/datacapturing\/defaultdistancecalculationstrategy\/calculatedistance(from:to:)-8psef","title":"func calculateDistance(from: (Double, Double), to: (Double, Double)) -> Double","type":"method"},{"path":"\/documentation\/datacapturing\/defaultdistancecalculationstrategy\/calculatedistance(from:to:)-9cuta","title":"func calculateDistance(from: CLLocation, to: CLLocation) -> Double","type":"method"}],"path":"\/documentation\/datacapturing\/defaultdistancecalculationstrategy","title":"DefaultDistanceCalculationStrategy","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/defaulttrackcleaner\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/defaulttrackcleaner\/isvalid(location:)","title":"func isValid(location: CLLocation) -> Bool","type":"method"}],"path":"\/documentation\/datacapturing\/defaulttrackcleaner","title":"DefaultTrackCleaner","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/deletioncleaner\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/deletioncleaner\/clean(measurement:from:)","title":"func clean(measurement: Int64, from: PersistenceLayer) throws","type":"method"}],"path":"\/documentation\/datacapturing\/deletioncleaner","title":"DeletionCleaner","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/diskconsumption\/init(consumedbytes:availablebytes:)","title":"init(consumedBytes: Int, availableBytes: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/diskconsumption\/availablebytes","title":"let availableBytes: Int","type":"property"},{"path":"\/documentation\/datacapturing\/diskconsumption\/consumedbytes","title":"let consumedBytes: Int","type":"property"}],"path":"\/documentation\/datacapturing\/diskconsumption","title":"DiskConsumption","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/event\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/datacapturing\/event\/measurement","title":"let measurement: Measurement","type":"property"},{"path":"\/documentation\/datacapturing\/event\/time","title":"let time: Date","type":"property"},{"path":"\/documentation\/datacapturing\/event\/type","title":"let type: EventType","type":"property"},{"path":"\/documentation\/datacapturing\/event\/value","title":"var value: String?","type":"property"}],"path":"\/documentation\/datacapturing\/event","title":"Event","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/eventmo\/measurement","title":"var measurement: MeasurementMO?","type":"property"},{"path":"\/documentation\/datacapturing\/eventmo\/time","title":"var time: Date?","type":"property"},{"path":"\/documentation\/datacapturing\/eventmo\/type","title":"var type: Int16","type":"property"},{"path":"\/documentation\/datacapturing\/eventmo\/typeenum","title":"var typeEnum: EventType","type":"property"},{"path":"\/documentation\/datacapturing\/eventmo\/value","title":"var value: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/eventmo\/fetchrequest()","title":"class func fetchRequest() -> NSFetchRequest<EventMO>","type":"method"}],"path":"\/documentation\/datacapturing\/eventmo","title":"EventMO","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/geolocation\/init(latitude:longitude:accuracy:speed:timestamp:isvalid:parent:)","title":"init(latitude: Double, longitude: Double, accuracy: Double, speed: Double, timestamp: UInt64, isValid: Bool, parent: Track)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/geolocation\/accuracy","title":"let accuracy: Double","type":"property"},{"path":"\/documentation\/datacapturing\/geolocation\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/datacapturing\/geolocation\/isvalid","title":"let isValid: Bool","type":"property"},{"path":"\/documentation\/datacapturing\/geolocation\/latitude","title":"let latitude: Double","type":"property"},{"path":"\/documentation\/datacapturing\/geolocation\/longitude","title":"let longitude: Double","type":"property"},{"path":"\/documentation\/datacapturing\/geolocation\/speed","title":"let speed: Double","type":"property"},{"path":"\/documentation\/datacapturing\/geolocation\/timestamp","title":"let timestamp: UInt64","type":"property"},{"path":"\/documentation\/datacapturing\/geolocation\/track","title":"let track: Track","type":"property"}],"path":"\/documentation\/datacapturing\/geolocation","title":"GeoLocation","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/geolocationmo\/accuracy","title":"var accuracy: Double","type":"property"},{"path":"\/documentation\/datacapturing\/geolocationmo\/ispartofcleanedtrack","title":"var isPartOfCleanedTrack: Bool","type":"property"},{"path":"\/documentation\/datacapturing\/geolocationmo\/lat","title":"var lat: Double","type":"property"},{"path":"\/documentation\/datacapturing\/geolocationmo\/lon","title":"var lon: Double","type":"property"},{"path":"\/documentation\/datacapturing\/geolocationmo\/speed","title":"var speed: Double","type":"property"},{"path":"\/documentation\/datacapturing\/geolocationmo\/timestamp","title":"var timestamp: Int64","type":"property"},{"path":"\/documentation\/datacapturing\/geolocationmo\/track","title":"var track: TrackMO?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/geolocationmo\/fetchrequest()","title":"class func fetchRequest() -> NSFetchRequest<GeoLocationMO>","type":"method"}],"path":"\/documentation\/datacapturing\/geolocationmo","title":"GeoLocationMO","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/measurement\/==(_:_:)","title":"static func == (Measurement, Measurement) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/measurement\/events","title":"var events: [Event]","type":"property"},{"path":"\/documentation\/datacapturing\/measurement\/identifier","title":"let identifier: Int64","type":"property"},{"path":"\/documentation\/datacapturing\/measurement\/synchronizable","title":"var synchronizable: Bool","type":"property"},{"path":"\/documentation\/datacapturing\/measurement\/synchronized","title":"var synchronized: Bool","type":"property"},{"path":"\/documentation\/datacapturing\/measurement\/timestamp","title":"let timestamp: UInt64","type":"property"},{"path":"\/documentation\/datacapturing\/measurement\/tracklength","title":"var trackLength: Double","type":"property"},{"path":"\/documentation\/datacapturing\/measurement\/tracks","title":"var tracks: [Track]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/measurement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/measurement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/datacapturing\/measurement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/measurement","title":"Measurement","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/measurementmo\/events","title":"var events: NSOrderedSet?","type":"property"},{"path":"\/documentation\/datacapturing\/measurementmo\/identifier","title":"var identifier: Int64","type":"property"},{"path":"\/documentation\/datacapturing\/measurementmo\/synchronizable","title":"var synchronizable: Bool","type":"property"},{"path":"\/documentation\/datacapturing\/measurementmo\/synchronized","title":"var synchronized: Bool","type":"property"},{"path":"\/documentation\/datacapturing\/measurementmo\/timestamp","title":"var timestamp: Int64","type":"property"},{"path":"\/documentation\/datacapturing\/measurementmo\/tracklength","title":"var trackLength: Double","type":"property"},{"path":"\/documentation\/datacapturing\/measurementmo\/tracks","title":"var tracks: NSOrderedSet?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/measurementmo\/addtoevents(_:)-2bb3v","title":"func addToEvents(EventMO)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/addtoevents(_:)-4serf","title":"func addToEvents(NSOrderedSet)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/addtotracks(_:)-1okeo","title":"func addToTracks(TrackMO)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/addtotracks(_:)-89nmd","title":"func addToTracks(NSOrderedSet)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/insertintoevents(_:at:)-6fowx","title":"func insertIntoEvents([EventMO], at: NSIndexSet)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/insertintoevents(_:at:)-7f6d7","title":"func insertIntoEvents(EventMO, at: Int)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/insertintotracks(_:at:)-27qpr","title":"func insertIntoTracks(TrackMO, at: Int)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/insertintotracks(_:at:)-8iwnl","title":"func insertIntoTracks([TrackMO], at: NSIndexSet)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/removefromevents(_:)-4yxtw","title":"func removeFromEvents(NSOrderedSet)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/removefromevents(_:)-547n8","title":"func removeFromEvents(EventMO)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/removefromevents(at:)-39lyp","title":"func removeFromEvents(at: NSIndexSet)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/removefromevents(at:)-3uq36","title":"func removeFromEvents(at: Int)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/removefromtracks(_:)-6qb0u","title":"func removeFromTracks(TrackMO)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/removefromtracks(_:)-9omo6","title":"func removeFromTracks(NSOrderedSet)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/removefromtracks(at:)-2pkyf","title":"func removeFromTracks(at: Int)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/removefromtracks(at:)-6wczn","title":"func removeFromTracks(at: NSIndexSet)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/replaceevents(at:with:)-625wb","title":"func replaceEvents(at: NSIndexSet, with: [EventMO])","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/replaceevents(at:with:)-9rsji","title":"func replaceEvents(at: Int, with: EventMO)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/replacetracks(at:with:)-3qwz2","title":"func replaceTracks(at: Int, with: TrackMO)","type":"method"},{"path":"\/documentation\/datacapturing\/measurementmo\/replacetracks(at:with:)-8b7mc","title":"func replaceTracks(at: NSIndexSet, with: [TrackMO])","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/measurementmo\/fetchrequest()","title":"class func fetchRequest() -> NSFetchRequest<MeasurementMO>","type":"method"}],"path":"\/documentation\/datacapturing\/measurementmo","title":"MeasurementMO","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/movebisdatacapturingservice\/precapturinglocationdelegate","title":"var preCapturingLocationDelegate: CLLocationManagerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/movebisdatacapturingservice\/start()","title":"func start() throws","type":"method"}],"path":"\/documentation\/datacapturing\/movebisdatacapturingservice","title":"MovebisDataCapturingService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/persistencelayer\/init(onmanager:withdistancecalculator:)","title":"init(onManager: CoreDataManager, withDistanceCalculator: DistanceCalculationStrategy)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/persistencelayer\/countgeolocations(formeasurement:)","title":"func countGeoLocations(forMeasurement: Measurement) throws -> Int","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/countmeasurements()","title":"func countMeasurements() throws -> Int","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/createevent(of:withvalue:timestamp:parent:)","title":"func createEvent(of: EventType, withValue: String?, timestamp: Date, parent: inout Measurement) throws -> Event","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/delete(event:)","title":"func delete(event: Event) throws","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/delete(measurement:)","title":"func delete(measurement: Int64) throws","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/load(measurementidentifiedby:)","title":"func load(measurementIdentifiedBy: Int64) throws -> Measurement","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/loadclean(track:)","title":"func loadClean(track: inout Track) throws -> [GeoLocation]","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/loadevents(typed:formeasurement:)","title":"func loadEvents(typed: EventType, forMeasurement: Measurement) throws -> [Event]","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/loadmeasurements()","title":"func loadMeasurements() throws -> [Measurement]","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/loadsynchronizablemeasurements()","title":"func loadSynchronizableMeasurements() throws -> [Measurement]","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/save(measurement:)","title":"func save(measurement: Measurement) throws -> Measurement","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/persistencelayer\/collectgeolocations(from:)","title":"static func collectGeoLocations(from: Measurement) -> [GeoLocation]","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/extractidentifiers(from:)","title":"static func extractIdentifiers(from: [Measurement]) -> [Int64]","type":"method"},{"path":"\/documentation\/datacapturing\/persistencelayer\/traversetracks(ofmeasurement:call:)","title":"static func traverseTracks(ofMeasurement: Measurement, call: (Track, GeoLocation) -> Void)","type":"method"}],"path":"\/documentation\/datacapturing\/persistencelayer","title":"PersistenceLayer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/sensorvalue\/init(timestamp:x:y:z:)","title":"init(timestamp: Date, x: Double, y: Double, z: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/sensorvalue\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/datacapturing\/sensorvalue\/timestamp","title":"let timestamp: Date","type":"property"},{"path":"\/documentation\/datacapturing\/sensorvalue\/x","title":"let x: Double","type":"property"},{"path":"\/documentation\/datacapturing\/sensorvalue\/y","title":"let y: Double","type":"property"},{"path":"\/documentation\/datacapturing\/sensorvalue\/z","title":"let z: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/sensorvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/datacapturing\/sensorvalue\/==(_:_:)","title":"static func == (SensorValue, SensorValue) -> Bool","type":"op"}],"path":"\/documentation\/datacapturing\/sensorvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/sensorvalue\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/datacapturing\/sensorvalue\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/sensorvalue","title":"SensorValue","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/sensorvaluefiletype\/fileextension","title":"let fileExtension: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/sensorvaluefiletype\/accelerationvaluetype","title":"static let accelerationValueType: SensorValueFileType","type":"property"},{"path":"\/documentation\/datacapturing\/sensorvaluefiletype\/directionvaluetype","title":"static let directionValueType: SensorValueFileType","type":"property"},{"path":"\/documentation\/datacapturing\/sensorvaluefiletype\/rotationvaluetype","title":"static let rotationValueType: SensorValueFileType","type":"property"}],"path":"\/documentation\/datacapturing\/sensorvaluefiletype","title":"SensorValueFileType","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/staticauthenticator\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/staticauthenticator\/jwttoken","title":"var jwtToken: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/staticauthenticator\/authenticate(onsuccess:onfailure:)","title":"func authenticate(onSuccess: (String) -> Void, onFailure: (Error) -> Void)","type":"method"}],"path":"\/documentation\/datacapturing\/staticauthenticator","title":"StaticAuthenticator","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/track\/locations","title":"var locations: [GeoLocation]","type":"property"}],"path":"\/documentation\/datacapturing\/track","title":"Track","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/trackmo\/locations","title":"var locations: NSOrderedSet?","type":"property"},{"path":"\/documentation\/datacapturing\/trackmo\/measurement","title":"var measurement: MeasurementMO?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/trackmo\/addtolocations(_:)-7bsx1","title":"func addToLocations(NSOrderedSet)","type":"method"},{"path":"\/documentation\/datacapturing\/trackmo\/addtolocations(_:)-8d299","title":"func addToLocations(GeoLocationMO)","type":"method"},{"path":"\/documentation\/datacapturing\/trackmo\/insertintolocations(_:at:)-674x0","title":"func insertIntoLocations(GeoLocationMO, at: Int)","type":"method"},{"path":"\/documentation\/datacapturing\/trackmo\/insertintolocations(_:at:)-8iyhq","title":"func insertIntoLocations([GeoLocationMO], at: NSIndexSet)","type":"method"},{"path":"\/documentation\/datacapturing\/trackmo\/removefromlocations(_:)-2rclk","title":"func removeFromLocations(GeoLocationMO)","type":"method"},{"path":"\/documentation\/datacapturing\/trackmo\/removefromlocations(_:)-9s5vo","title":"func removeFromLocations(NSOrderedSet)","type":"method"},{"path":"\/documentation\/datacapturing\/trackmo\/removefromlocations(at:)-7pewh","title":"func removeFromLocations(at: Int)","type":"method"},{"path":"\/documentation\/datacapturing\/trackmo\/removefromlocations(at:)-geei","title":"func removeFromLocations(at: NSIndexSet)","type":"method"},{"path":"\/documentation\/datacapturing\/trackmo\/replacelocations(at:with:)-28ojw","title":"func replaceLocations(at: Int, with: GeoLocationMO)","type":"method"},{"path":"\/documentation\/datacapturing\/trackmo\/replacelocations(at:with:)-9m8a9","title":"func replaceLocations(at: NSIndexSet, with: [GeoLocationMO])","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/trackmo\/fetchrequest()","title":"class func fetchRequest() -> NSFetchRequest<TrackMO>","type":"method"}],"path":"\/documentation\/datacapturing\/trackmo","title":"TrackMO","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/uploadprocess\/init(apiurl:session:sessionregistry:authenticator:onsuccess:onfailure:)","title":"init(apiUrl: URL, session: Session, sessionRegistry: SessionRegistry, authenticator: Authenticator, onSuccess: (UInt64) -> Void, onFailure: (UInt64, Error) -> Void)","type":"init"}],"path":"\/documentation\/datacapturing\/uploadprocess","title":"UploadProcess","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/authenticator\/authenticate(onsuccess:onfailure:)","title":"func authenticate(onSuccess: (String) -> Void, onFailure: (Error) -> Void)","type":"method"}],"path":"\/documentation\/datacapturing\/authenticator","title":"Authenticator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/cleaner\/clean(measurement:from:)","title":"func clean(measurement: Int64, from: PersistenceLayer) throws","type":"method"}],"path":"\/documentation\/datacapturing\/cleaner","title":"Cleaner","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamigratorprotocol\/migratestore(at:toversion:inbundle:)","title":"func migrateStore(at: URL, toVersion: CoreDataMigrationVersion, inBundle: Bundle)","type":"method"},{"path":"\/documentation\/datacapturing\/coredatamigratorprotocol\/requiresmigration(at:toversion:inbundle:)","title":"func requiresMigration(at: URL, toVersion: CoreDataMigrationVersion, inBundle: Bundle) -> Bool","type":"method"}],"path":"\/documentation\/datacapturing\/coredatamigratorprotocol","title":"CoreDataMigratorProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/credentialsauthenticator\/authenticationendpoint","title":"var authenticationEndpoint: URL","type":"property"},{"path":"\/documentation\/datacapturing\/credentialsauthenticator\/password","title":"var password: String?","type":"property"},{"path":"\/documentation\/datacapturing\/credentialsauthenticator\/username","title":"var username: String?","type":"property"}],"path":"\/documentation\/datacapturing\/credentialsauthenticator","title":"CredentialsAuthenticator","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/distancecalculationstrategy\/calculatedistance(from:to:)-2xwdw","title":"func calculateDistance(from: GeoLocationMO, to: GeoLocationMO) -> Double","type":"method"},{"path":"\/documentation\/datacapturing\/distancecalculationstrategy\/calculatedistance(from:to:)-3xfm5","title":"func calculateDistance(from: (Double, Double), to: (Double, Double)) -> Double","type":"method"},{"path":"\/documentation\/datacapturing\/distancecalculationstrategy\/calculatedistance(from:to:)-7wpr4","title":"func calculateDistance(from: CLLocation, to: CLLocation) -> Double","type":"method"}],"path":"\/documentation\/datacapturing\/distancecalculationstrategy","title":"DistanceCalculationStrategy","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/synchronizer\/authenticator","title":"var authenticator: Authenticator","type":"property"},{"path":"\/documentation\/datacapturing\/synchronizer\/handler","title":"var handler: [(DataCapturingEvent, Status) -> Void]","type":"property"},{"path":"\/documentation\/datacapturing\/synchronizer\/synconwifionly","title":"var syncOnWiFiOnly: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/synchronizer\/activate()","title":"func activate() throws","type":"method"},{"path":"\/documentation\/datacapturing\/synchronizer\/deactivate()","title":"func deactivate()","type":"method"},{"path":"\/documentation\/datacapturing\/synchronizer\/sync()","title":"func sync()","type":"method"},{"path":"\/documentation\/datacapturing\/synchronizer\/syncchecked()","title":"func syncChecked()","type":"method"}],"path":"\/documentation\/datacapturing\/synchronizer","title":"Synchronizer","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/trackcleaner\/isvalid(location:)","title":"func isValid(location: CLLocation) -> Bool","type":"method"}],"path":"\/documentation\/datacapturing\/trackcleaner","title":"TrackCleaner","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/locationcacheentry\/accuracy","title":"let accuracy: Double","type":"property"},{"path":"\/documentation\/datacapturing\/locationcacheentry\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/datacapturing\/locationcacheentry\/isvalid","title":"let isValid: Bool","type":"property"},{"path":"\/documentation\/datacapturing\/locationcacheentry\/latitude","title":"let latitude: Double","type":"property"},{"path":"\/documentation\/datacapturing\/locationcacheentry\/longitude","title":"let longitude: Double","type":"property"},{"path":"\/documentation\/datacapturing\/locationcacheentry\/speed","title":"let speed: Double","type":"property"},{"path":"\/documentation\/datacapturing\/locationcacheentry\/timestamp","title":"let timestamp: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/locationcacheentry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/datacapturing\/locationcacheentry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/locationcacheentry","title":"LocationCacheEntry","type":"struct"},{"path":"\/documentation\/datacapturing\/measurementfile","title":"MeasurementFile","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/sensorvaluefile\/init(filetype:)","title":"init(fileType: SensorValueFileType)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/sensorvaluefile\/load(from:)","title":"func load(from: Measurement) throws -> [SensorValue]","type":"method"}],"path":"\/documentation\/datacapturing\/sensorvaluefile","title":"SensorValueFile","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/sessionregistry\/init()","title":"init()","type":"init"}],"path":"\/documentation\/datacapturing\/sessionregistry","title":"SessionRegistry","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/version1","title":"case version1","type":"case"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/version2","title":"case version2","type":"case"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/version3","title":"case version3","type":"case"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/version4","title":"case version4","type":"case"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/version5","title":"case version5","type":"case"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/version6","title":"case version6","type":"case"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/version7","title":"case version7","type":"case"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/version8","title":"case version8","type":"case"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/version9","title":"case version9","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/datacapturing\/coredatamigrationversion\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/coredatamigrationversion\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/datacapturing\/coredatamigrationversion\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/coredatamigrationversion","title":"CoreDataMigrationVersion","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/invalidtrack","title":"case invalidTrack","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/ispaused","title":"case isPaused","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/isrunning","title":"case isRunning","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/nocurrentmeasurement","title":"case noCurrentMeasurement","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/notpaused","title":"case notPaused","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/notrunning","title":"case notRunning","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/datacapturing\/datacapturingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingerror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/datacapturing\/datacapturingerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/datacapturingerror","title":"DataCapturingError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/geolocationacquired(position:)","title":"case geoLocationAcquired(position: LocationCacheEntry)","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/geolocationfixacquired","title":"case geoLocationFixAcquired","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/geolocationfixlost","title":"case geoLocationFixLost","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/lowdiskspace(allocation:)","title":"case lowDiskSpace(allocation: DiskConsumption)","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/servicepaused(measurement:event:)","title":"case servicePaused(measurement: Int64?, event: Event)","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/serviceresumed(measurement:event:)","title":"case serviceResumed(measurement: Int64?, event: Event)","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/servicestarted(measurement:event:)","title":"case serviceStarted(measurement: Int64?, event: Event)","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/servicestopped(measurement:event:)","title":"case serviceStopped(measurement: Int64?, event: Event)","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/synchronizationfinished(measurement:)","title":"case synchronizationFinished(measurement: Int64)","type":"case"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/synchronizationstarted(measurement:)","title":"case synchronizationStarted(measurement: Int64)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/datacapturingevent\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/datacapturing\/datacapturingevent","title":"DataCapturingEvent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/eventtype\/lifecyclepause","title":"case lifecyclePause","type":"case"},{"path":"\/documentation\/datacapturing\/eventtype\/lifecycleresume","title":"case lifecycleResume","type":"case"},{"path":"\/documentation\/datacapturing\/eventtype\/lifecyclestart","title":"case lifecycleStart","type":"case"},{"path":"\/documentation\/datacapturing\/eventtype\/lifecyclestop","title":"case lifecycleStop","type":"case"},{"path":"\/documentation\/datacapturing\/eventtype\/modalitytypechange","title":"case modalityTypeChange","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/eventtype\/init(rawvalue:)","title":"init?(rawValue: Int16)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/eventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/datacapturing\/eventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/eventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/eventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/datacapturing\/eventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/eventtype","title":"EventType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/filesupporterror\/notreadable(cause:)","title":"case notReadable(cause: Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/filesupporterror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/datacapturing\/filesupporterror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/filesupporterror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/datacapturing\/filesupporterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/filesupporterror","title":"FileSupportError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/inconsistentdata\/locationorderviolated","title":"case locationOrderViolated","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/inconsistentdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/datacapturing\/inconsistentdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/inconsistentdata\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/datacapturing\/inconsistentdata\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/inconsistentdata\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/datacapturing\/inconsistentdata\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/inconsistentdata","title":"InconsistentData","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/persistenceerror\/datanotloadable(measurement:)","title":"case dataNotLoadable(measurement: Int64)","type":"case"},{"path":"\/documentation\/datacapturing\/persistenceerror\/inconsistentstate","title":"case inconsistentState","type":"case"},{"path":"\/documentation\/datacapturing\/persistenceerror\/measurementnotloadable(_:)","title":"case measurementNotLoadable(Int64)","type":"case"},{"path":"\/documentation\/datacapturing\/persistenceerror\/measurementsnotloadable","title":"case measurementsNotLoadable","type":"case"},{"path":"\/documentation\/datacapturing\/persistenceerror\/nonpersistenttrackencountered(_:_:)","title":"case nonPersistentTrackEncountered(Track, Measurement)","type":"case"},{"path":"\/documentation\/datacapturing\/persistenceerror\/tracknotloadable(_:_:)","title":"case trackNotLoadable(Track, Measurement)","type":"case"},{"path":"\/documentation\/datacapturing\/persistenceerror\/unsynchronizedmeasurement(identifier:)","title":"case unsynchronizedMeasurement(identifier: Int64)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/persistenceerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/datacapturing\/persistenceerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/persistenceerror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/datacapturing\/persistenceerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/persistenceerror\/errordescription-79jsj","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/datacapturing\/persistenceerror\/errordescription-8o79r","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/datacapturing\/persistenceerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/datacapturing\/persistenceerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/datacapturing\/persistenceerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/datacapturing\/persistenceerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/persistenceerror","title":"PersistenceError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/serializationerror\/compressionfailed(data:)","title":"case compressionFailed(data: Data)","type":"case"},{"path":"\/documentation\/datacapturing\/serializationerror\/nonserializableaccuracy(cause:accuracy:)","title":"case nonSerializableAccuracy(cause: Error, accuracy: Double)","type":"case"},{"path":"\/documentation\/datacapturing\/serializationerror\/nonserializablelatitude(cause:latitude:)","title":"case nonSerializableLatitude(cause: Error, latitude: Double)","type":"case"},{"path":"\/documentation\/datacapturing\/serializationerror\/nonserializablelocationtimestamp(cause:timestamp:)","title":"case nonSerializableLocationTimestamp(cause: Error, timestamp: UInt64)","type":"case"},{"path":"\/documentation\/datacapturing\/serializationerror\/nonserializablelongitude(cause:longitude:)","title":"case nonSerializableLongitude(cause: Error, longitude: Double)","type":"case"},{"path":"\/documentation\/datacapturing\/serializationerror\/nonserializablesensorvaluetimestamp(cause:timestamp:)","title":"case nonSerializableSensorValueTimestamp(cause: Error, timestamp: Date)","type":"case"},{"path":"\/documentation\/datacapturing\/serializationerror\/nonserializablespeed(cause:speed:)","title":"case nonSerializableSpeed(cause: Error, speed: Double)","type":"case"},{"path":"\/documentation\/datacapturing\/serializationerror\/nonserializablexvalue(cause:value:)","title":"case nonSerializableXValue(cause: Error, value: Double)","type":"case"},{"path":"\/documentation\/datacapturing\/serializationerror\/nonserializableyvalue(cause:value:)","title":"case nonSerializableYValue(cause: Error, value: Double)","type":"case"},{"path":"\/documentation\/datacapturing\/serializationerror\/nonserializablezvalue(cause:value:)","title":"case nonSerializableZValue(cause: Error, value: Double)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/serializationerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/datacapturing\/serializationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/serializationerror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/datacapturing\/serializationerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/serializationerror\/errordescription-8wsn5","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/datacapturing\/serializationerror\/errordescription-90uqn","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/datacapturing\/serializationerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/datacapturing\/serializationerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/datacapturing\/serializationerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/datacapturing\/serializationerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/serializationerror","title":"SerializationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/alamofireerror(_:)","title":"case alamofireError(AFError)","type":"case"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/authenticationnotsuccessful(_:)","title":"case authenticationNotSuccessful(String)","type":"case"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/dataerror(_:)","title":"case dataError(String)","type":"case"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/invaliduploadlocation(_:)","title":"case invalidUploadLocation(String)","type":"case"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/modalityerror(_:)","title":"case modalityError(String)","type":"case"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/nolocation","title":"case noLocation","type":"case"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/noresponse","title":"case noResponse","type":"case"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/notauthenticated(_:)","title":"case notAuthenticated(String)","type":"case"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/requestfailed(httpstatuscode:)","title":"case requestFailed(httpStatusCode: Int)","type":"case"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/uploadnotaccepted(measurementidentifier:)","title":"case uploadNotAccepted(measurementIdentifier: Int64)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/asaferror","title":"var asAFError: AFError?","type":"property"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/asaferror(orfailwith:file:line:)","title":"func asAFError(orFailWith: () -> String, file: StaticString, line: UInt) -> AFError","type":"method"}],"path":"\/documentation\/datacapturing\/serverconnectionerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/errordescription-9jvu2","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/errordescription-9s3k9","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/datacapturing\/serverconnectionerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/datacapturing\/serverconnectionerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/datacapturing\/serverconnectionerror","title":"ServerConnectionError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/datacapturing\/status\/error(_:)","title":"case error(Error)","type":"case"},{"path":"\/documentation\/datacapturing\/status\/success","title":"case success","type":"case"}],"path":"\/documentation\/datacapturing\/status","title":"Status","type":"enum"}],"path":"\/documentation\/datacapturing","title":"DataCapturing","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}