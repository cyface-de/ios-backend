{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataCapturingService"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Klemens Muthmann"}]}],"type":"aside","name":"Author"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"10.2.0"}]}],"type":"aside","name":"Version"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"1.0.0"}]}],"type":"aside","name":"Since"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/datacapturing\/datacapturingservice"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/DataCapturing\/objc(cs)NSObject"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/DataCapturing\/documentation\/DataCapturing\/MovebisDataCapturingService"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/DataCapturing\/objc(pl)CLLocationManagerDelegate","doc:\/\/DataCapturing\/objc(pl)NSObject","doc:\/\/DataCapturing\/s7CVarArgP","doc:\/\/DataCapturing\/s28CustomDebugStringConvertibleP","doc:\/\/DataCapturing\/s23CustomStringConvertibleP","doc:\/\/DataCapturing\/SQ","doc:\/\/DataCapturing\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An object of this class handles the lifecycle of starting and stopping data capturing."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataCapturingService"}],"title":"DataCapturingService","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"c:@M@DataCapturing@objc(cs)DataCapturingService","modules":[{"name":"DataCapturing"}],"navigatorTitle":[{"kind":"identifier","text":"DataCapturingService"}]},"hierarchy":{"paths":[["doc:\/\/DataCapturing\/documentation\/DataCapturing"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/init(sensorManager:accelerometerInterval:gyroInterval:directionsInterval:savingInterval:dataManager:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/coreDataStack","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/currentMeasurement","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/handler","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/isPaused","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/isRunning","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/locationUpdateSkipRate"]},{"title":"Instance Methods","identifiers":["doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/changeModality(to:)","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/pause()","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/resume()","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/setup()","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/start(inMode:)","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/stop()"]},{"title":"Type Methods","identifiers":["doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/convertToUtcTimestamp(date:)","doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/currentTimeInMillisSince1970()"]},{"title":"Default Implementations","identifiers":["doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/CLLocationManagerDelegate-Implementations"],"generated":true}],"references":{"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/init(sensorManager:accelerometerInterval:gyroInterval:directionsInterval:savingInterval:dataManager:)":{"role":"symbol","title":"init(sensorManager:accelerometerInterval:gyroInterval:directionsInterval:savingInterval:dataManager:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"sensorManager"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CMMotionManager","preciseIdentifier":"c:objc(cs)CMMotionManager"},{"kind":"text","text":", "},{"kind":"externalParam","text":"accelerometerInterval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"gyroInterval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"directionsInterval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":", "},{"kind":"externalParam","text":"savingInterval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dataManager"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CoreDataManager","preciseIdentifier":"s:13DataCapturing04CoreA7ManagerC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new completely initialized "},{"type":"codeVoice","code":"DataCapturingService"},{"type":"text","text":" accessing data a certain amount of times per second."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/init(sensorManager:accelerometerInterval:gyroInterval:directionsInterval:savingInterval:dataManager:)","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/init(sensormanager:accelerometerinterval:gyrointerval:directionsinterval:savinginterval:datamanager:)"},"doc://DataCapturing/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/DataCapturing\/s28CustomDebugStringConvertibleP"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/handler":{"role":"symbol","title":"handler","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": [(("},{"kind":"typeIdentifier","text":"DataCapturingEvent","preciseIdentifier":"s:13DataCapturing0aB5EventO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Status","preciseIdentifier":"s:13DataCapturing6StatusO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")]"}],"abstract":[{"type":"text","text":"A list of listeners that are notified of important events during data capturing."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/handler","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/handler"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/resume()":{"role":"symbol","title":"resume()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resume"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Resumes the current data capturing with the data capturing measurement that was running when "},{"type":"codeVoice","code":"pause()"},{"type":"text","text":" was called. A call to this method is only valid after a call to "},{"type":"codeVoice","code":"pause()"},{"type":"text","text":". It is going to fail if used after "},{"type":"codeVoice","code":"start()"},{"type":"text","text":" or "},{"type":"codeVoice","code":"stop()"},{"type":"text","text":"."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/resume()","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/resume()"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/stop()":{"role":"symbol","title":"stop()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Stops the currently running or paused data capturing process or does nothing if the process is not"},{"type":"text","text":" "},{"type":"text","text":"running."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/stop()","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/stop()"},"doc://DataCapturing/s7CVarArgP":{"type":"unresolvable","title":"Swift.CVarArg","identifier":"doc:\/\/DataCapturing\/s7CVarArgP"},"doc://DataCapturing/objc(cs)NSObject":{"type":"unresolvable","title":"ObjectiveC.NSObject","identifier":"doc:\/\/DataCapturing\/objc(cs)NSObject"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/isPaused":{"role":"symbol","title":"isPaused","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isPaused"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if data capturing was running but is currently paused; "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/isPaused","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/ispaused"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/changeModality(to:)":{"role":"symbol","title":"changeModality(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"changeModality"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Changes the current mode of transportation of the measurement. This can happen if the user switches for example from a bicycle to a car."},{"type":"text","text":" "},{"type":"text","text":"If the new modality is the same as the old one, the method returns without doing anything."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/changeModality(to:)","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/changemodality(to:)"},"doc://DataCapturing/documentation/DataCapturing/MovebisDataCapturingService":{"role":"symbol","title":"MovebisDataCapturingService","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MovebisDataCapturingService"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"DataCapturingService"},{"type":"text","text":" implementation that provides the ability to capture locations"},{"type":"text","text":" "},{"type":"text","text":"before an actual measurement has been started."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/MovebisDataCapturingService","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MovebisDataCapturingService"}],"url":"\/documentation\/datacapturing\/movebisdatacapturingservice"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/coreDataStack":{"role":"symbol","title":"coreDataStack","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"coreDataStack"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CoreDataManager","preciseIdentifier":"s:13DataCapturing04CoreA7ManagerC"}],"abstract":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"type":"text","text":"CoreData"}]},{"type":"text","text":" stack used to store, retrieve and update captured data to the local system until the App can transmit it to a server."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/coreDataStack","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/coredatastack"},"doc://DataCapturing/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/DataCapturing\/SH"},"doc://DataCapturing/documentation/DataCapturing":{"role":"collection","title":"DataCapturing","abstract":[],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing"},"doc://DataCapturing/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/DataCapturing\/s23CustomStringConvertibleP"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/setup()":{"role":"symbol","title":"setup()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setup"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Puts the "},{"type":"codeVoice","code":"DataCapturingService"},{"type":"text","text":" in the correct state according to the current database values."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/setup()","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/setup()"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/convertToUtcTimestamp(date:)":{"role":"symbol","title":"convertToUtcTimestamp(date:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convertToUtcTimestamp"},{"kind":"text","text":"("},{"kind":"externalParam","text":"date"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"}],"abstract":[{"type":"text","text":"Converts a "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" object to a UTC milliseconds timestamp since january 1st 1970."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/convertToUtcTimestamp(date:)","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/converttoutctimestamp(date:)"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/locationUpdateSkipRate":{"role":"symbol","title":"locationUpdateSkipRate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"locationUpdateSkipRate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"abstract":[{"type":"text","text":"Locations are captured approximately once per second on most devices. If you would like to get fewer updates this parameter controls, how many events are skipped before one is reported to your handler. The default value is 1, which reports every event. To receive fewer events you could for example set it to 5 to only receive every fifth event."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/locationUpdateSkipRate","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/locationupdateskiprate"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/CLLocationManagerDelegate-Implementations":{"role":"collectionGroup","title":"CLLocationManagerDelegate Implementations","abstract":[],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/CLLocationManagerDelegate-Implementations","kind":"article","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/cllocationmanagerdelegate-implementations"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/currentTimeInMillisSince1970()":{"role":"symbol","title":"currentTimeInMillisSince1970()","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"currentTimeInMillisSince1970"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"UInt64","preciseIdentifier":"s:s6UInt64V"}],"abstract":[{"type":"text","text":"Provides the current time in milliseconds since january 1st 1970 (UTC)."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/currentTimeInMillisSince1970()","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/currenttimeinmillissince1970()"},"doc://DataCapturing/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/DataCapturing\/SQ"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/pause()":{"role":"symbol","title":"pause()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pause"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Pauses the current data capturing measurement for the moment. No data is captured until "},{"type":"codeVoice","code":"resume()"},{"type":"text","text":" has been called, but upon the call to "},{"type":"codeVoice","code":"resume()"},{"type":"text","text":" the last measurement will be continued instead of beginning a new now."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/pause()","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/pause()"},"doc://DataCapturing/objc(pl)NSObject":{"type":"unresolvable","title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/DataCapturing\/objc(pl)NSObject"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/currentMeasurement":{"role":"symbol","title":"currentMeasurement","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"currentMeasurement"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The currently recorded "},{"type":"codeVoice","code":"Measurement"},{"type":"text","text":" or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if there is no active recording."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/currentMeasurement","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/currentmeasurement"},"doc://DataCapturing/objc(pl)CLLocationManagerDelegate":{"type":"unresolvable","title":"CoreLocation.CLLocationManagerDelegate","identifier":"doc:\/\/DataCapturing\/objc(pl)CLLocationManagerDelegate"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService":{"role":"symbol","title":"DataCapturingService","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataCapturingService"}],"abstract":[{"type":"text","text":"An object of this class handles the lifecycle of starting and stopping data capturing."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataCapturingService"}],"url":"\/documentation\/datacapturing\/datacapturingservice"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/start(inMode:)":{"role":"symbol","title":"start(inMode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"inMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Starts the capturing process."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/start(inMode:)","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/start(inmode:)"},"doc://DataCapturing/documentation/DataCapturing/DataCapturingService/isRunning":{"role":"symbol","title":"isRunning","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isRunning"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"codeVoice","code":"true"},{"type":"text","text":" if data capturing is running; "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"identifier":"doc:\/\/DataCapturing\/documentation\/DataCapturing\/DataCapturingService\/isRunning","kind":"symbol","type":"topic","url":"\/documentation\/datacapturing\/datacapturingservice\/isrunning"}}}